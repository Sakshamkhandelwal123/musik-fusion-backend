scalar Date

type Friend {
  id: String!
  userId: String!
  followingUserId: String!
  isFriend: Boolean!
  createdAt: Date!
  updatedAt: Date!
}

input FriendUnfriendInput {
  followingUserId: String!
  isFriend: Boolean!
}

input FollowUserInput {
  followingUserId: String!
}

input UnFollowUserInput {
  followingUserId: String!
}

type Query {
  getUserFollowers(username: String!): [User!]!
  getUserFollowing(username: String!): [User!]!
  getUserFriends(username: String!): [User!]!
}

type Mutation {
  followUser(followUserInput: FollowUserInput!): String!
  unFollowUser(unFollowUserInput: UnFollowUserInput!): String!
  friendUnfriendAUser(friendUnfriendInput: FriendUnfriendInput!): String!
}
